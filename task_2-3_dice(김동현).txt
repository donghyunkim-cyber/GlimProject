#include <string>
#include <vector>

using namespace std;

int solution(int a, int b, int c, int d) {
    vector<int> dice = {a,b,c,d};
    int counts[7] = { 0 };
    int answer = 0;
    int num = 0;
    int p = 0;
    int q = 0;

    for (int i = 0; i < 4; i++)
    {
        num = dice[i];
        counts[num]++;
    }

    // Case 1: 네 개의 숫자가 같다
    for (int i = 1; i <= 6; i++) 
    {
        if (counts[i] == 4) 
        {
            return 1111 * i;
        }
    }

    // Case 2: 세 개의 숫자가 같고 나머지 하나가 다름
    for (int i = 1; i <= 6; i++) 
    {
        if (counts[i] == 3) 
        { // 세 번 나온 숫자
            for (int j = 1; j <= 6; j++) 
            {
                // 한 번 나온 숫자
                if (counts[j] == 1) 
                { 
                    return (10 * i + j) * (10 * i + j);
                }
            }
        }
    }

    // Case 3: 네 개의 숫자 중 2개가 같고 나머지 2개도 같다
    vector<int> pairs;
    for (int i = 1; i <= 6; i++) 
    {
        // 두 번 나온 숫자
        if (counts[i] == 2) 
        { 
            pairs.push_back(i);
        }
    }
    if (pairs.size() == 2) 
    {
        return (pairs[0] + pairs[1]) * abs(pairs[0] - pairs[1]);
    }

    // Case 4: 네 개의 숫자 중 2개가 같고 나머지 2개는 각각 다르다
    for (int i = 1; i <= 6; i++) 
    {
        if (counts[i] == 2) 
        { // 두 번 나온 숫자
            vector<int> others;
            for (int j = 1; j <= 6; j++) 
            {
                if (counts[j] == 1) 
                { // 한 번 나온 숫자
                    others.push_back(j);
                }
            }
            if (others.size() == 2) 
            {
                return others[0] * others[1];
            }
        }
    }

    // Case 5: 숫자 전부가 다름
    int minValue = 7; // 최소값을 초기화 (1~6 범위)
    for (int i = 0; i < 4; i++)
    {
        if (dice[i] < minValue) 
        {
            minValue = dice[i];
        }
    }
    return minValue;
}